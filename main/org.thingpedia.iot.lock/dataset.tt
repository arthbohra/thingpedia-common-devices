dataset @org.thingpedia.iot.lock language "en" {

  program := @org.thingpedia.iot.lock.state()
  #_[utterances=["did I lock my door",
                 "did I leave my door unlocked?",
                 "did I forget to lock my door?",
                 "check whether I locked the door",
                 "is it unlocked?",
                 "check if it is locked"]];

  query := @org.thingpedia.iot.lock.state()
  #_[utterances=["whether the door is locked",
                 "whether it is locked or not"]];

  stream := monitor (@org.thingpedia.iot.lock.state())
  #_[utterances=["when my door is locked or unlocked"]];

  stream (p_state : Enum(unlocked, locked)) := monitor (@org.thingpedia.iot.lock.state()), (state == p_state)
  #_[utterances=["when my door becomes ${p_state}",
                "when the door is ${p_state}",
                "when the door gets ${p_state}",
                "when it becomes ${p_state}",
                "when it is ${p_state}",
                "when it gets ${p_state}"]];

  stream := monitor (@org.thingpedia.iot.lock.state()), (state == enum(unlocked))
  #_[utterances=["when I open the lock",
                "when I unlock the door",
                "when someone unlocks the door",
                "when anyone unlocks the door"]];

  stream := monitor (@org.thingpedia.iot.lock.state()), (state == enum(locked))
  #_[utterances=["when I close the lock",
                "when I lock my door",
                "when someone locks the door",
                "when anyone locks the door"]];

  program (p_name : String) :=  @org.thingpedia.iot.lock(name=p_name).state()
  #_[utterances=["did I lock my ${p_name:const} door",
                 "did I leave my ${p_name:const} door unlocked?",
                 "did I forget to lock my ${p_name:const} door?",
                 "check whether I locked the ${p_name:const} door"]];

  action (p_state :Enum(lock,unlock)) := @org.thingpedia.iot.lock.set_state(state=p_state)
  #_[utterances=["${p_state} my door"]];

  action := @org.thingpedia.iot.lock.set_state(state=enum(lock))
  #_[utterances=["help me lock the door",
                 "lock the door for me"]];

  action := @org.thingpedia.iot.lock.set_state(state=enum(unlock))
  #_[utterances=["help me unlock the door",
                 "unlock the door for me"]];

  query (p_name : String) := @org.thingpedia.iot.lock(name=p_name).state()
  #_[utterances=["whether the ${p_name:const} door is locked"]];

  stream (p_name : String) := monitor (@org.thingpedia.iot.lock(name=p_name).state())
  #_[utterances=["when my ${p_name:const} door is locked or unlocked"]];

  stream (p_name : String, p_state : Enum(unlocked, locked)) :=  monitor (@org.thingpedia.iot.lock(name=p_name).state()), (state == p_state)
  #_[utterances=["when my ${p_name:const} door becomes ${p_state}",
                "when the ${p_name:const} door is ${p_state}",
                "when the ${p_name:const} door gets ${p_state}"]];

  stream (p_name : String) := monitor (@org.thingpedia.iot.lock(name=p_name).state()), (state == enum(unlocked))
  #_[utterances=["when I open the ${p_name:const} lock",
                "when I unlock the ${p_name:const} door",
                "when someone unlocks the ${p_name:const} door",
                "when anyone unlocks the ${p_name:const} door"]];

  stream (p_name : String) :=  monitor (@org.thingpedia.iot.lock(name=p_name).state()), (state == enum(locked))
  #_[utterances=["when I close the ${p_name:const} lock",
                "when I lock my ${p_name:const} door",
                "when someone locks the ${p_name:const} door",
                "when anyone locks the ${p_name:const} door"]];

  action (p_name : String, p_state :Enum(lock,unlock)) := @org.thingpedia.iot.lock(name=p_name).set_state(state=p_state)
  #_[utterances=["${p_state} my ${p_name:const} door"]];

  action (p_name : String) := @org.thingpedia.iot.lock(name=p_name).set_state(state=enum(lock))
  #_[utterances=["help me lock the ${p_name:const} door",
                 "lock the ${p_name:const} door for me"]];

  action (p_name : String) := @org.thingpedia.iot.lock(name=p_name).set_state(state=enum(unlock))
  #_[utterances=["help me unlock the ${p_name:const} door",
                 "unlock the ${p_name:const} door for me"]];
}